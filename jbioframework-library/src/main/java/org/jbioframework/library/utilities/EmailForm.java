package org.jbioframework.library.utilities;;

import javax.swing.*;

/**
 * GUI created by NetbeansIDE ContactEditor and edited and implemented by aks5238.
 */
public class EmailForm extends javax.swing.JFrame {

    /**
     * Creates new form ContactEditorUI
     */
    public EmailForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        //give JFrame a title for the menu bar
        super.setTitle("New Message");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        //subject
        subjectL = new javax.swing.JLabel("Subject:");

        subjectTF = new JTextField();
        subjectTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                subjectTFActionPerformed(e);
            }
        });

        //sender
        fromL = new javax.swing.JLabel("Sender:");
        fromL.setToolTipText("Email address of sender:");

        fromTF = new javax.swing.JTextField();
        fromTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                fromTFActionPerformed(e);
            }
        });

        //password
        /* Decision to send emails from and to JBioFramework@gmail.com to avoid authentication
        passL = new javax.swing.JLabel("Password:");
        passL.setToolTipText("Password for authentication through Gmail servers");

        passTF = new javax.swing.JPasswordField(); //JPasswordField extends JTextField and hides echo text.
        passTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                passTFActionPerformed(e);
            }
        });
        */

        //message body
        bodyL = new javax.swing.JLabel("Message body:");

        jScrollPane = new javax.swing.JScrollPane();
        bodyTA = new javax.swing.JTextArea();

        bodyTA.setColumns(20);
        bodyTA.setRows(5);
        bodyTA.setWrapStyleWord(false);
        jScrollPane.setViewportView(bodyTA);

        //send button
        sendButton = new javax.swing.JButton("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent e) {
                sendButtonActionPerformed(e);
            }
        });

        //GUI formatting done by NetbeansIDE's ContactEditor
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        /*
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(passL)
                                .addGap(1, 1, 1)
                                .addComponent(passTF)
                                .addContainerGap())
                        */
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(subjectL)
                                                        .addComponent(fromL))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fromTF)
                                                        .addComponent(subjectTF)))
                                        .addComponent(sendButton))
                                .addGap(11, 11, 11))
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(bodyL)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(subjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(subjectL))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fromL)
                                        .addComponent(fromTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                /*
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passL)
                                        .addComponent(passTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                */
                                .addComponent(bodyL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendButton)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    /* subjectTF on enter: change the title of the frame to 'New Message: [subjectTF.getText]'*/
    private void subjectTFActionPerformed(java.awt.event.ActionEvent evt) {
        super.setTitle(subjectTF.getText());
    }

    /* sendB on click: prompt for authorization, then call GMailClient with necessary fields*/
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String from = "JBioFramework@gmail.com";
        String pass = "proteomics";
        String[] to = {"JBioFramework@gmail.com"};
        String subject = subjectTF.getText();
        String body = "[from: " + fromTF.getText() + "]\n\n" + bodyTA.getText();

        /**try {
            GMailClient.sendFromGMail(from, pass, to, subject, body);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(super.getContentPane(), "Error sending message. " +
                    "Please send manually from preferred email client.");
        }*/
    }

    /* fromTF has no necessary action to perform. just holds relevant text */
    private void fromTFActionPerformed(java.awt.event.ActionEvent evt) {
    }

    /* passTF has no necessary action to perform. it just holds relevant text */
    //private void passTFActionPerformed(java.awt.event.ActionEvent evt) { }

    // Variables declaration - do not modify
    private javax.swing.JTextArea bodyTA;
    private javax.swing.JLabel fromL;
    private javax.swing.JLabel subjectL;
    private javax.swing.JLabel passL;
    private javax.swing.JLabel bodyL;
    private javax.swing.JTextField fromTF;
    private javax.swing.JTextField subjectTF;
    private javax.swing.JTextField passTF;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JButton sendButton;
    // End of variables declaration
}
